/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* detect(ListNode* head)
    {
        if(head==NULL)
        {
            return NULL;
        }
        ListNode* fast=head;
        ListNode* slow= head;
        int flag=0;
        while(fast->next!=NULL && fast->next->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)
            {
                return fast;
            }
        }
        return NULL;
        
        
    }
    ListNode *detectCycle(ListNode *head) {
        
        ListNode* fast=detect(head);
        if(fast==NULL)
        {
            return NULL;
        }
        ListNode* slow=head;
        while(slow!=fast)
        {
            slow=slow->next;
            fast=fast->next;
        }
        
        return slow;
        
    }
};
