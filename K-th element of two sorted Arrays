int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
      if(n>m)
      {
          return kthElement(arr2,arr1,m,n,k);
      }
      int l=max(0,k-m);           // minimum element taking from array1
      int r=min(k,n);           // maximum element taj=king from array1
      while(l<=r)
      {
          int mid=(l+r)/2;
          int mid2= k-mid;
          int l1 = mid==0?INT_MIN:arr1[mid-1];                                 // TC O(log(min(n,k))
          int h1= mid==n?INT_MAX:arr1[mid];
          int l2= mid2==0?INT_MIN:arr2[mid2-1];
          int h2=mid2==m?INT_MAX:arr2[mid2];
          if(l1>h2)
          {
              r=mid-1;
          }
          else if(l2>h1)
          {
              l=mid+1;
          }
          else{
              return max(l1,l2);
          }
      }
      return 1;
        
    }
