int r=matrix.size(),c=matrix[0].size();
    int mn=INT_MAX,mx=INT_MIN,i;
    for(i=0;i<r;i++)
    {
        mn=min(mn,matrix[i][0]);
        mx=max(mx,matrix[i][c-1]);
    }
    int des=(r*c+1)/2;
    while(mn<mx)                                                   //O(32 * r * log(c)). The upper bound function will take log(c) time and is performed for each row. And since the numbers will be max of 32 bit
    {
        int mid=mn+(mx-mn)/2;
        int place=0;
        for(i=0;i<r;i++)
        place+=upper_bound(matrix[i].begin(),matrix[i].end(),mid)-matrix[i].begin();
        if(place<des)
        mn=mid+1;
        else mx=mid;
    }
    return mn;
    }
